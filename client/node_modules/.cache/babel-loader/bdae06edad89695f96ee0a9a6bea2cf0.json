{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabry\\\\OneDrive\\\\Desktop\\\\Arvazon\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/payment\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/gabry/OneDrive/Desktop/Arvazon/client/src/components/mainpages/cart/PaymentForm.js"],"names":["React","useState","axios","CardElement","useElements","useStripe","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","id","response","post","amount","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,yBAAlD;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMQ,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARiC,CAUlC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBZ,WAApB,CAApB,CAbkC,CAelC;;AACA,UAAM;AAACa,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAI,CAACE,KAAL,EAAY;AACR,UAAI;AACA,cAAM;AAACK,UAAAA;AAAD,YAAOJ,aAAb;AACA,cAAMK,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,MAAM,EAAE,IADuD;AAE/DH,UAAAA;AAF+D,SAA5C,CAAvB;;AAKA,YAAGC,QAAQ,CAACG,IAAT,CAAclB,OAAjB,EAAyB;AACrBmB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAnB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAXD,CAWE,OAAOQ,KAAP,EAAc;AACZU,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;AACH;AACJ,KAfD,MAeK;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH;AACF,GAvCH;;AAyCA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApDQV,W;UAGUD,S,EACED,W;;;KAJZE,W;AAsDT,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js'\r\n\r\nfunction PaymentForm() {\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    const handleSubmit = async (event) => {\r\n        // Block native form submission.\r\n        event.preventDefault();\r\n    \r\n        if (!stripe || !elements) {\r\n          // Stripe.js has not loaded yet. Make sure to disable\r\n          // form submission until Stripe.js has loaded.\r\n          return;\r\n        }\r\n    \r\n        // Get a reference to a mounted CardElement. Elements knows how\r\n        // to find your CardElement because there can only ever be one of\r\n        // each type of element.\r\n        const cardElement = elements.getElement(CardElement);\r\n    \r\n        // Use your card Element with other Stripe.js APIs\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n          type: 'card',\r\n          card: cardElement,\r\n        });\r\n    \r\n        if (!error) {\r\n            try {\r\n                const {id} = paymentMethod\r\n                const response = await axios.post(\"http://localhost:5000/payment\", {\r\n                    amount: 1000,\r\n                    id\r\n                })\r\n\r\n                if(response.data.success){\r\n                    console.log(\"Successful payment\")\r\n                    setSuccess(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Error\", error);\r\n            }\r\n        }else{\r\n            console.log(error);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}