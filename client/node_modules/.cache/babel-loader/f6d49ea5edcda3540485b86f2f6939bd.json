{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabry\\\\OneDrive\\\\Desktop\\\\Arvazon\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  style: {\n    base: {\n      fontSize: '16px',\n      color: '#ffffff',\n      '::placeholder': {\n        color: '#ffffff'\n      }\n    },\n    invalid: {\n      color: '#9e2146'\n    }\n  }\n};\n\nfunction PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    // Block native form submission.\n    e.preventDefault(); // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/cart\", {\n          email: \"gabdev.work@gmail.com\",\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stripe_btn_pay\",\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/gabry/OneDrive/Desktop/Arvazon/client/src/components/mainpages/cart/PaymentForm.js"],"names":["React","useState","axios","CardElement","useElements","useStripe","CARD_OPTIONS","style","base","fontSize","color","invalid","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","id","response","post","email","amount","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,yBAAlD;;;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,KAAK,EAAE,SAFH;AAGJ,uBAAiB;AACfA,QAAAA,KAAK,EAAE;AADQ;AAHb,KADD;AAQLC,IAAAA,OAAO,EAAE;AACPD,MAAAA,KAAK,EAAE;AADA;AARJ;AADQ,CAAnB;;AAeA,SAASE,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9B;AACAA,IAAAA,CAAC,CAACC,cAAF,GAF8B,CAI9B;AACA;AACA;;AACA,UAAMC,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBlB,WAApB,CAApB,CAP8B,CAS9B;;AACA,UAAM;AAACmB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAI,CAACE,KAAL,EAAY;AACR,UAAI;AACA,cAAM;AAACK,UAAAA;AAAD,YAAOJ,aAAb;AACA,cAAMK,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAW,4BAAX,EAAyC;AAC5DC,UAAAA,KAAK,EAAE,uBADqD;AAE5DC,UAAAA,MAAM,EAAE,IAFoD;AAG5DJ,UAAAA;AAH4D,SAAzC,CAAvB;;AAMA,YAAGC,QAAQ,CAACI,IAAT,CAAcnB,OAAjB,EAAyB;AACrBoB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACApB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAZD,CAYE,OAAOQ,KAAP,EAAc;AACZW,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AACH;AACJ,KAhBD,MAgBK;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AACH;AACF,GAlCH;;AAoCA,sBACI;AAAA,cAEQ,CAACtB,OAAD,gBAAW;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACP;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACA,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADO,eAMX;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAiD,QAAA,QAAQ,EAAE,CAACS,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANW;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX,GASQ;AAXhB,mBADJ;AAgBH;;GA1DQH,W;UAGUP,S,EACED,W;;;KAJZQ,W;AA4DT,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js'\r\n\r\nconst CARD_OPTIONS={\r\n    style: {\r\n      base: {\r\n        fontSize: '16px',\r\n        color: '#ffffff',\r\n        '::placeholder': {\r\n          color: '#ffffff',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#9e2146',\r\n      },\r\n    },\r\n  }\r\n\r\nfunction PaymentForm() {\r\n\r\n    const [success, setSuccess] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    const handleSubmit = async (e) => {\r\n        // Block native form submission.\r\n        e.preventDefault();\r\n    \r\n        // Get a reference to a mounted CardElement. Elements knows how\r\n        // to find your CardElement because there can only ever be one of\r\n        // each type of element.\r\n        const cardElement = elements.getElement(CardElement);\r\n    \r\n        // Use your card Element with other Stripe.js APIs\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n          type: 'card',\r\n          card: cardElement,\r\n        });\r\n    \r\n        if (!error) {\r\n            try {\r\n                const {id} = paymentMethod\r\n                const response = await axios.post(\"http://localhost:5000/cart\", {\r\n                    email: \"gabdev.work@gmail.com\",\r\n                    amount: 1000,\r\n                    id\r\n                })\r\n\r\n                if(response.data.success){\r\n                    console.log(\"Successful payment\")\r\n                    setSuccess(true)\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Error\", error);\r\n            }\r\n        }else{\r\n            console.log(error.message);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !success ? <form onSubmit={handleSubmit}>\r\n                    <fieldset className=\"FormGroup\">\r\n                        <div className=\"FormRow\">\r\n                        <CardElement options={CARD_OPTIONS} />\r\n                        </div>\r\n                    </fieldset>\r\n                <button className=\"stripe_btn_pay\" type=\"submit\" disabled={!stripe}>\r\n                  Pay\r\n                </button>\r\n              </form> : null\r\n            }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n"]},"metadata":{},"sourceType":"module"}